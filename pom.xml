<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.swingsane</groupId>
	<artifactId>swingsane-package</artifactId>
	<version>0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>SwingSane Package Scripts</name>
	<url>http://swingsane.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vendor>Roland Quast</vendor>
		<copyright>Copyright (c) 2014-2015 Roland Quast and Contributors.</copyright>
		<swingSaneName>SwingSane</swingSaneName>
		<swingSaneMainClass>com.swingsane.gui.Main</swingSaneMainClass>
		<installerMainClass>com.swingsane.installer.Main</installerMainClass>
		<windowsVersion>0.1.0.0</windowsVersion>
		<macJavaArchive>jre-8u31-macosx-x64</macJavaArchive>
		<macJava>jre1.8.0_31.jre</macJava>
		<win32JavaArchive>jre-8u31-windows-i586</win32JavaArchive>
		<win32Java>jre1.8.0_31</win32Java>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jasig.maven</groupId>
				<artifactId>maven-notice-plugin</artifactId>
				<version>1.0.4</version>
				<configuration>
					<noticeTemplate>etc/notice/NOTICE.template</noticeTemplate>
					<licenseMapping>
						<param>etc/notice/license-mappings.xml</param>
					</licenseMapping>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<version>1.5.2</version>
				<executions>
					<execution>
						<id>l4j-swingsane</id>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<headerType>gui</headerType>
							<dontWrapJar>true</dontWrapJar>
							<stayAlive>true</stayAlive>
							<icon>${basedir}/icons/swingsane.ico</icon>
							<outfile>${project.build.directory}/swingsane.exe</outfile>
							<jar>lib/swingsane.jar</jar>
							<jre>
								<path>jre/</path>
								<minVersion>1.7.0</minVersion>
								<maxHeapSize>1024</maxHeapSize>
							</jre>
							<singleInstance>
								<mutexName>${swingSaneName}</mutexName>
							</singleInstance>
							<versionInfo>
								<fileVersion>${windowsVersion}</fileVersion>
								<txtFileVersion>${windowsVersion}</txtFileVersion>
								<fileDescription>${swingSaneName}</fileDescription>
								<copyright>${copyright}</copyright>
								<productVersion>${windowsVersion}</productVersion>
								<txtProductVersion>${windowsVersion}</txtProductVersion>
								<productName>${swingSaneName}</productName>
								<companyName>${vendor}</companyName>
								<internalName>swingsane</internalName>
								<originalFilename>swingsane.exe</originalFilename>
							</versionInfo>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>uberjar</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>swingsane_setup_${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/assemble/incjar.xml</descriptor>
							</descriptors>
							<archive>
								<manifest>
									<mainClass>${installerMainClass}</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <dependencies>
			    	<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>20020829</version>
					</dependency>
			    </dependencies>
				<executions>
					<execution>
						<id>create-app-bundle</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								
								<exec executable="tar" spawn="false">
									<arg
										line="zxvf ${basedir}/jre/${macJavaArchive}.tar.gz -C ${project.build.directory}" />
								</exec>
								
								<exec executable="mv" spawn="false">
									<arg
										line="${project.build.directory}/${macJava}/Contents/Home ${project.build.directory}/${macJava}/Contents/jre" />
								</exec>
								
								<mkdir dir="${project.build.directory}/${macJava}/Contents/Home" />
								
								<exec executable="mv" spawn="false">
									<arg
										line="${project.build.directory}/${macJava}/Contents/jre ${project.build.directory}/${macJava}/Contents/Home/" />
								</exec>
			
								<mkdir dir="${project.build.directory}/app" />
								<mkdir dir="${project.build.directory}/appbundle" />
			
								<unjar
									src="${project.build.directory}/swingsane_setup_${project.version}.jar"
									dest="${project.build.directory}/appbundle" />
			
								<taskdef name="bundleapp" classpath="${basedir}/platform/osx/appbundler-1.0ea.jar"
									classname="com.oracle.appbundler.AppBundlerTask" />
			
								<path id="compile.classpath">
									<fileset dir="${project.build.directory}/appbundle/lib">
										<include name="**/*" />
									</fileset>
								</path>
			
								<bundleapp classpathref="compile.classpath"
									outputdirectory="${project.build.directory}/app" name="${swingSaneName}"
									displayname="${swingSaneName}" executableName="${swingSaneName}"
									identifier="com.swingsane.manager" shortversion="${project.version}"
									version="${project.version}" icon="${basedir}/icons/swingsane.icns"
									mainclassname="${swingSaneMainClass}" copyright="${copyright}"
									applicationCategory="public.app-category.productivity">
			
									<runtime dir="${project.build.directory}/${macJava}/Contents/Home" />
			
									<arch name="x86_64" />
		
									<!-- Workaround since the icon parameter for bundleapp doesn't work -->
									<option value="-Xdock:icon=Contents/Resources/swingsane.icns" />
			
									<option value="-Dapple.laf.useScreenMenuBar=true" />
									<option value="-Dcom.apple.macos.use-file-dialog-packages=true" />
									<option value="-Dcom.apple.macos.useScreenMenuBar=true" />
									<option value="-Dapple.awt.application.name=${swingSaneName}" />
									<option
										value="-Dcom.apple.mrj.application.apple.menu.about.name=${swingSaneName}" />
									<option value="-Dcom.apple.smallTabs=true" />
									<option value="-Dfile.encoding=UTF-8" />
			
									<option value="-Xmx1024M" name="Xmx" />
								</bundleapp>

							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>update-app-bundle-into-uberjar</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<path id="compile.classpath">
									<fileset dir="${project.build.directory}/appbundle/lib">
										<include name="**/*" />
									</fileset>
								</path>
								<pathconvert property="mf.classpath" pathsep=" ">
									<path refid="compile.classpath" />
									<flattenmapper />
								</pathconvert>
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>create-a-windows-signed-nsis-installer</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
							
								<exec executable="tar" spawn="false">
									<arg
										line="zxvf ${basedir}/jre/${win32JavaArchive}.tar.gz -C ${project.build.directory}" />
								</exec>

								<move todir="${project.build.directory}/jre">
									<fileset dir="${project.build.directory}/${win32Java}" />
								</move>
						
								<exec executable="C:\Program Files (x86)\NSIS\makensis.exe" osfamily="winnt">
									<arg value="${basedir}/setup.nsi" />
								</exec>
						
								<exec executable="/usr/bin/makensis" osfamily="unix">
									<arg value="${basedir}/setup.nsi" />
								</exec>
						
								<!--  enable for codesigning
								<exec executable="${basedir}/windows/codesign/signtool.exe" osfamily="winnt">
									<arg value="sign" />
									<arg value="/f" />
									<arg value="${basedir}/windows/codesign/cs.pfx" />
									<arg value="/t" />
									<arg value="http://timestamp.verisign.com/scripts/timstamp.dll" />
									<arg value="${basedir}/setup_unsigned.exe" />
								</exec>
								-->
						
								<copy file="${basedir}/setup_unsigned.exe" tofile="${project.build.directory}/swingsane_setup_${project.version}.exe" />
						
								<!--  enable for codesigning
								<exec executable="/usr/local/bin/osslsigncode" osfamily="unix">
									<arg value="-pkcs12" />
									<arg value="${basedir}/windows/codesign/cs.pfx" />
									<arg value="-t" />
									<arg value="http://timestamp.verisign.com/scripts/timstamp.dll" />
									<arg value="-in" />
									<arg value="${basedir}/setup_unsigned.exe" />
									<arg value="-out" />
									<arg value="${project.build.directory}/swingsane_setup_${project.version}.exe" />
								</exec>
								-->
						
								<delete file="${basedir}/setup_unsigned.exe" />
							</tasks>
						</configuration>
					</execution>					
					<execution>
						<id>create-mac-pack</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
				
								<taskdef resource="net/sf/antcontrib/antcontrib.properties"
									classpathref="maven.plugin.classpath" />

								<condition property="isMac" value="true">
									<os family="mac" />
								</condition>
				
								<if>
									<istrue value="${isMac}" />
									<then>
									    <!-- enable for codesigning
										<exec dir="${project.build.directory}/app" osfamily="mac"
											executable="/usr/bin/codesign" spawn="false">
											<arg line='-s "${developerID}" ${swingSaneName}.app' />
										</exec>
										-->
										<!-- enable for DMG Canvas
										<exec dir="${project.build.directory}/app" executable="/usr/local/bin/dmgcanvas"
											osfamily="mac" spawn="false">
											<arg
												line='${basedir}/osx/DMG_Canvas/SwingSane.dmgCanvas ${project.build.directory}/${swingSaneName}.dmg' />
										</exec>
										-->
									</then>
									<else>
									</else>
								</if>
				
							</tasks>
						</configuration>
					</execution>
			    </executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.4.0</version>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.swingsane</groupId>
			<artifactId>swingsane</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	
</project>
